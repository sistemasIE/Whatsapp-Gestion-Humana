const { addKeyword } = require("@bot-whatsapp/bot");
const { addToDB, deleteFromDB } = require("../utils/functions.js");

const flowDocumentos = addKeyword([
  "3",
  "documento",
  "carne",
  "carnet",
  "carta laboral",
])
  .addAnswer(
    "*ATENCI√ìN*\n*Si* o *No*\nAutoriza el uso de algunos datos personales, como su c√©dula, su nombre , su n√∫mero de tel√©fono, y su correo, para poder brindarte un mejor servicio. ¬øEst√°s de acuerdo?",
    { capture: true, delay: 3000 },
    async (ctx, { flowDynamic, endFlow }) => {
      const { body } = ctx;

      if (
        body.toUpperCase().trim() === "SI" ||
        body.toUpperCase().trim() === "S"
      ) {
        return;
      } else {
        return endFlow({
          body: "¬°Entendido! Si cambias de opini√≥n, no dudes en contactarnos.",
        });
      }
    }
  ) //
  .addAnswer(
    ["1- Para Cartas Laborales üìù", "2- Para Carnets ü™™"],
    {
      capture: true,
      delay: 3000,
    },
    async (ctx, { flowDynamic, endFlow }) => {
      const { body, from } = ctx;
      if (isNaN(Number(body)))
        return endFlow("Opci√≥n no v√°lida, por favor intente de nuevo.");

      if (body === "1") {
        const data = { chatId: from, idTipoDocumento: 1 };
        await addToDB("solicitar-documento", data);
      } else if (body === "2") {
        const data = { chatId: from, idTipoDocumento: 2 };
        const res = await addToDB("solicitar-documento", data);
      }
    }
  )
  .addAnswer(
    // NOMBRE COMPLETO
    "üìù Escriba su *Nombre Completo*:",
    { capture: true, delay: 3000 },
    async (ctx, {}) => {
      const { body, from } = ctx;

      const data = { chatId: from, nombreEmpleado: body };
      await addToDB("solicitar-documento", data);
    }
  )
  .addAnswer(
    // N√öMERO DE C√âDULA
    "ü™™*N√∫mero de C√©dula*:",
    { capture: true, delay: 3000 },
    async (ctx, { flowDynamic, endFlow }) => {
      const { body, from } = ctx;
      const chatId = from;

      // Validar que el n√∫mero de c√©dula sea un n√∫mero
      if (isNaN(Number(body))) {
        await deleteFromDB("solicitar-documento", chatId);
        return endFlow(
          "N√∫mero de c√©dula no v√°lido, por favor intente de nuevo escribiendo *MENU*."
        );
      }

      const data = { chatId: from, numeroDeCedula: body };
      await addToDB("solicitar-documento", data);
    }
  )
  .addAnswer(
    // CORREO ELECTR√ìNICO
    "‚úâÔ∏è Escriba la *direcci√≥n de correo* a *D√ìNDE LLEGAR√Å EL DOCUMENTO*, por favor:",
    { capture: true },
    async (ctx, { flowDynamic, endFlow }) => {
      const { body, from } = ctx;
      const chatId = from;
      // Validar que el correo electr√≥nico tenga un formato v√°lido
      if (!body.toUpperCase().includes("@")) {
        await deleteFromDB("solicitar-documento", chatId);
        return endFlow(
          "Correo electr√≥nico no v√°lido, por favor intente de nuevo escribiendo *MENU*."
        );
      }

      const data = { chatId: from, correoElectronico: body };
      await addToDB("solicitar-documento", data);

      return await flowDynamic(
        "‚úÖ Gracias por tu informaci√≥n, en un plazo m√°ximo de *(3) tres d√≠as recibir√°s el documento solicitado*."
      );
    }
  );

module.exports = flowDocumentos;
